...EEEE.
======================================================================
ERROR: testRosenBrockWithEasyInitialGuess (__main__.exactLineSearchTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "RosenbrockTest.py", line 68, in testRosenBrockWithEasyInitialGuess
    res = op.solve((2,2))
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 9, in solve
    return self.classic_newton_method(initial_guess)
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 31, in classic_newton_method
    L = la.cholesky(hessian, lower=True)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 81, in cholesky
    check_finite=check_finite)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 30, in _cholesky
    raise LinAlgError("%d-th leading minor not positive definite" % info)
LinAlgError: 2-th leading minor not positive definite

======================================================================
ERROR: testRosenBrockWithHardInitialGuess (__main__.exactLineSearchTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "RosenbrockTest.py", line 73, in testRosenBrockWithHardInitialGuess
    res = op.solve((-1.2, 1))
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 9, in solve
    return self.classic_newton_method(initial_guess)
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 31, in classic_newton_method
    L = la.cholesky(hessian, lower=True)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 81, in cholesky
    check_finite=check_finite)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 30, in _cholesky
    raise LinAlgError("%d-th leading minor not positive definite" % info)
LinAlgError: 2-th leading minor not positive definite

======================================================================
ERROR: testRosenBrockWithHardInitialGuessAndSuppliedGradient (__main__.exactLineSearchTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "RosenbrockTest.py", line 78, in testRosenBrockWithHardInitialGuessAndSuppliedGradient
    res = op.solve((-1.2, 1))
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 9, in solve
    return self.classic_newton_method(initial_guess)
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 31, in classic_newton_method
    L = la.cholesky(hessian, lower=True)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 81, in cholesky
    check_finite=check_finite)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 30, in _cholesky
    raise LinAlgError("%d-th leading minor not positive definite" % info)
LinAlgError: 2-th leading minor not positive definite

======================================================================
ERROR: testRosenBrockWithStandardInitialGuess (__main__.exactLineSearchTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "RosenbrockTest.py", line 63, in testRosenBrockWithStandardInitialGuess
    res = op.solve()
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 9, in solve
    return self.classic_newton_method(initial_guess)
  File "/h/d9/b/dat11ote/courses/fmnn25/FMNN25---Quasi-Newton-Methods/ClassicalNewton.py", line 31, in classic_newton_method
    L = la.cholesky(hessian, lower=True)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 81, in cholesky
    check_finite=check_finite)
  File "/usr/lib/python2.7/dist-packages/scipy/linalg/decomp_cholesky.py", line 30, in _cholesky
    raise LinAlgError("%d-th leading minor not positive definite" % info)
LinAlgError: 2-th leading minor not positive definite

----------------------------------------------------------------------
Ran 8 tests in 0.024s

FAILED (errors=4)
Initial guess not zero!
('LC: f_alpha(a_0) = ', 1601.0176535610408)
('LC: f_alpha(a_l) = ', 401.0)
('LC: f_grad(a_l) = ', 2002.0176535610408)
('LC: stuff = ', 1801.8158882049368)
('LC: other stuff = ', 2202.8158882049365)
LC
('LC: f_alpha(a_0) = ', 1765.0206855734659)
('LC: f_alpha(a_l) = ', 1601.0176535610408)
('LC: f_grad(a_l) = ', 5202.080417818348)
('LC: stuff = ', 468.18723760365174)
('LC: other stuff = ', 2069.2048911646925)
LC
('LC: f_alpha(a_0) = ', 1781.8610044442646)
('LC: f_alpha(a_l) = ', 1765.0206855734659)
('LC: f_grad(a_l) = ', 5610.0900391779796)
('LC: stuff = ', 50.490810352601862)
('LC: other stuff = ', 1815.5114959260677)
LC
('LC: f_alpha(a_0) = ', 1783.5494364910419)
('LC: f_alpha(a_l) = ', 1781.8610044442646)
('LC: f_grad(a_l) = ', 5651.7710407692857)
('LC: stuff = ', 5.0865939366929265)
('LC: other stuff = ', 1786.9475983809575)
LC
('LC: f_alpha(a_0) = ', 1783.7183236973206)
('LC: f_alpha(a_l) = ', 1783.5494364910419)
('LC: f_grad(a_l) = ', 5655.9479413289755)
('LC: stuff = ', 0.50903531471955177)
('LC: other stuff = ', 1784.0584718057614)
LC
('LC: f_alpha(a_0) = ', 1783.7352128579644)
('LC: f_alpha(a_l) = ', 1783.7183236973206)
('LC: f_grad(a_l) = ', 5656.3657193889576)
('LC: stuff = ', 0.050907291474834124)
('LC: other stuff = ', 1783.7692309887955)
LC
('LC: f_alpha(a_0) = ', 1783.7369017784281)
('LC: f_alpha(a_l) = ', 1783.7352128579644)
('LC: f_grad(a_l) = ', 5656.4074980749938)
('LC: stuff = ', 0.0050907667478486945)
('LC: other stuff = ', 1783.7403036247122)
LC
('LC: f_alpha(a_0) = ', 1783.7370706705203)
('LC: f_alpha(a_l) = ', 1783.7369017784281)
('LC: f_grad(a_l) = ', 5656.4116759523968)
('LC: stuff = ', 0.00050907705113294904)
('LC: other stuff = ', 1783.7374108554793)
LC
('LC: f_alpha(a_0) = ', 1783.7370875597289)
('LC: f_alpha(a_l) = ', 1783.7370706705203)
('LC: f_grad(a_l) = ', 5656.4120937402295)
('LC: stuff = ', 5.0907708534271943e-05)
('LC: other stuff = ', 1783.7371215782289)
LC
('LC: f_alpha(a_0) = ', 1783.7370892486508)
('LC: f_alpha(a_l) = ', 1783.7370875597289)
('LC: f_grad(a_l) = ', 5656.4121355190118)
('LC: stuff = ', 5.090771343179385e-06)
('LC: other stuff = ', 1783.7370926505002)
LC
('LC: f_alpha(a_0) = ', 1783.7370894175415)
('LC: f_alpha(a_l) = ', 1783.7370892486508)
('LC: f_grad(a_l) = ', 5656.4121396968912)
('LC: stuff = ', 5.0907713469394771e-07)
('LC: other stuff = ', 1783.737089757728)
LC
('LC: f_alpha(a_0) = ', 1783.7370894344319)
('LC: f_alpha(a_l) = ', 1783.7370894175415)
('LC: f_grad(a_l) = ', 5656.4121401146776)
('LC: stuff = ', 5.0907713473154854e-08)
('LC: other stuff = ', 1783.7370894684491)
LC
('LC: f_alpha(a_0) = ', 1783.7370894361193)
('LC: f_alpha(a_l) = ', 1783.7370894344319)
('LC: f_grad(a_l) = ', 5656.4121401564571)
('LC: stuff = ', 5.0912234986407098e-09)
('LC: other stuff = ', 1783.7370894395231)
LC
('LC: f_alpha(a_0) = ', 1783.7370894362889)
('LC: f_alpha(a_l) = ', 1783.7370894361193)
('LC: f_grad(a_l) = ', 5656.4121401606335)
('LC: stuff = ', 5.0867019857682306e-10)
('LC: other stuff = ', 1783.7370894366279)
LC
('LC: f_alpha(a_0) = ', 1783.7370894363062)
('LC: f_alpha(a_l) = ', 1783.7370894362889)
('LC: f_grad(a_l) = ', 5656.4121401610519)
('LC: stuff = ', 5.086701985768607e-11)
('LC: other stuff = ', 1783.7370894363398)
LC
('LC: f_alpha(a_0) = ', 1783.7370894363078)
('LC: f_alpha(a_l) = ', 1783.7370894363062)
('LC: f_grad(a_l) = ', 5656.4121401610946)
('LC: stuff = ', 4.5215128762387961e-12)
('LC: other stuff = ', 1783.7370894363107)
LC
('LC: f_alpha(a_0) = ', 1783.7370894363078)
('LC: f_alpha(a_l) = ', 1783.7370894363078)
('LC: f_grad(a_l) = ', 5656.4121401610983)
('LC: stuff = ', 0.0)
('LC: other stuff = ', 1783.7370894363078)
('alpha_k = ', 1.1111111111111112)
Initial guess not zero!
('LC: f_alpha(a_0) = ', 82.497001177642119)
('LC: f_alpha(a_l) = ', 24.199999999999996)
('LC: f_grad(a_l) = ', 106.69700117764211)
('LC: stuff = ', 96.0273010598779)
('LC: other stuff = ', 120.2273010598779)
LC
('LC: f_alpha(a_0) = ', 90.474721714285238)
('LC: f_alpha(a_l) = ', 82.497001177642119)
('LC: f_grad(a_l) = ', 262.44299516228989)
('LC: stuff = ', 23.619869564606113)
('LC: other stuff = ', 106.11687074224824)
LC
('LC: f_alpha(a_0) = ', 91.294039780711458)
('LC: f_alpha(a_l) = ', 90.474721714285238)
('LC: f_grad(a_l) = ', 282.33144109435671)
('LC: stuff = ', 2.5409829698492126)
('LC: other stuff = ', 93.015704684134448)
LC
('LC: f_alpha(a_0) = ', 91.376187113341032)
('LC: f_alpha(a_l) = ', 91.294039780711458)
('LC: f_grad(a_l) = ', 284.36355595243919)
('LC: stuff = ', 0.25592720035722388)
('LC: other stuff = ', 91.549966981068678)
LC
('LC: f_alpha(a_0) = ', 91.384404001929639)
('LC: f_alpha(a_l) = ', 91.376187113341032)
('LC: f_grad(a_l) = ', 284.56720027279727)
('LC: stuff = ', 0.025611048024548933)
('LC: other stuff = ', 91.401798161365576)
LC
('LC: f_alpha(a_0) = ', 91.385225712341864)
('LC: f_alpha(a_l) = ', 91.384404001929639)
('LC: f_grad(a_l) = ', 284.58756903331033)
('LC: stuff = ', 0.0025612881213165723)
('LC: other stuff = ', 91.386965290050952)
LC
('LC: f_alpha(a_0) = ', 91.3853078835986)
('LC: f_alpha(a_l) = ', 91.385225712341864)
('LC: f_grad(a_l) = ', 284.58960595264659)
('LC: stuff = ', 0.00025613064533631095)
('LC: other stuff = ', 91.385481842987204)
LC
('LC: f_alpha(a_0) = ', 91.385316100726456)
('LC: f_alpha(a_l) = ', 91.3853078835986)
('LC: f_grad(a_l) = ', 284.58980964501302)
('LC: stuff = ', 2.5613082883005811e-05)
('LC: other stuff = ', 91.385333496681483)
LC
('LC: f_alpha(a_0) = ', 91.385316922439173)
('LC: f_alpha(a_l) = ', 91.385316100726456)
('LC: f_grad(a_l) = ', 284.58983001425401)
('LC: stuff = ', 2.561308454562008e-06)
('LC: other stuff = ', 91.385318662034905)
LC
('LC: f_alpha(a_0) = ', 91.385317004610528)
('LC: f_alpha(a_l) = ', 91.385316922439173)
('LC: f_grad(a_l) = ', 284.58983205117812)
('LC: stuff = ', 2.5613087003842177e-07)
('LC: other stuff = ', 91.385317178570048)
LC
('LC: f_alpha(a_0) = ', 91.385317012827642)
('LC: f_alpha(a_l) = ', 91.385317004610528)
('LC: f_grad(a_l) = ', 284.58983225487054)
('LC: stuff = ', 2.5613087022174496e-08)
('LC: other stuff = ', 91.385317030223618)
LC
('LC: f_alpha(a_0) = ', 91.385317013649441)
('LC: f_alpha(a_l) = ', 91.385317012827642)
('LC: f_grad(a_l) = ', 284.58983227523976)
('LC: stuff = ', 2.5613087024007727e-09)
('LC: other stuff = ', 91.385317015388949)
LC
('LC: f_alpha(a_0) = ', 91.385317013731537)
('LC: f_alpha(a_l) = ', 91.385317013649441)
('LC: f_grad(a_l) = ', 284.58983227727691)
('LC: stuff = ', 2.5615361923118524e-10)
('LC: other stuff = ', 91.385317013905592)
LC
('LC: f_alpha(a_0) = ', 91.385317013739751)
('LC: f_alpha(a_l) = ', 91.385317013731537)
('LC: f_grad(a_l) = ', 284.58983227748053)
('LC: stuff = ', 2.5592612933862304e-11)
('LC: other stuff = ', 91.385317013757131)
LC
('LC: f_alpha(a_0) = ', 91.38531701374059)
('LC: f_alpha(a_l) = ', 91.385317013739751)
('LC: f_grad(a_l) = ', 284.5898322775007)
('LC: stuff = ', 2.559261293386412e-12)
('LC: other stuff = ', 91.385317013742309)
LC
('LC: f_alpha(a_0) = ', 91.385317013740647)
('LC: f_alpha(a_l) = ', 91.38531701374059)
('LC: f_grad(a_l) = ', 284.58983227750286)
('LC: stuff = ', 2.274898927454606e-13)
('LC: other stuff = ', 91.385317013740817)
LC
('LC: f_alpha(a_0) = ', 91.385317013740647)
('LC: f_alpha(a_l) = ', 91.385317013740647)
('LC: f_grad(a_l) = ', 284.58983227750298)
('LC: stuff = ', 0.0)
('LC: other stuff = ', 91.385317013740647)
('alpha_k = ', 1.1111111111111112)
Initial guess not zero!
('LC: f_alpha(a_0) = ', 82.497001176164673)
('LC: f_alpha(a_l) = ', 24.199999999999996)
('LC: f_grad(a_l) = ', 106.69700117616466)
('LC: stuff = ', 96.027301058548204)
('LC: other stuff = ', 120.22730105854819)
LC
('LC: f_alpha(a_0) = ', 90.474721712522097)
('LC: f_alpha(a_l) = ', 82.497001176164673)
('LC: f_grad(a_l) = ', 262.44299515476871)
('LC: stuff = ', 23.619869563929203)
('LC: other stuff = ', 106.11687074009387)
LC
('LC: f_alpha(a_0) = ', 91.294039778917934)
('LC: f_alpha(a_l) = ', 90.474721712522097)
('LC: f_grad(a_l) = ', 282.3314410858485)
('LC: stuff = ', 2.5409829697726387)
('LC: other stuff = ', 93.015704682294739)
LC
('LC: f_alpha(a_0) = ', 91.376187111544326)
('LC: f_alpha(a_l) = ', 91.294039778917934)
('LC: f_grad(a_l) = ', 284.36355594382786)
('LC: stuff = ', 0.25592720034947369)
('LC: other stuff = ', 91.54996697926741)
LC
('LC: f_alpha(a_0) = ', 91.384404000132804)
('LC: f_alpha(a_l) = ', 91.376187111544326)
('LC: f_grad(a_l) = ', 284.56720026417531)
('LC: stuff = ', 0.025611048023772957)
('LC: other stuff = ', 91.401798159568102)
LC
('LC: f_alpha(a_0) = ', 91.385225710544887)
('LC: f_alpha(a_l) = ', 91.384404000132804)
('LC: f_grad(a_l) = ', 284.58756902468747)
('LC: stuff = ', 0.0025612881212389665)
('LC: other stuff = ', 91.386965288254046)
LC
('LC: f_alpha(a_0) = ', 91.385307881801651)
('LC: f_alpha(a_l) = ', 91.385225710544887)
('LC: f_grad(a_l) = ', 284.58960594402362)
('LC: stuff = ', 0.00025613064532855028)
('LC: other stuff = ', 91.385481841190213)
LC
('LC: f_alpha(a_0) = ', 91.385316098929493)
('LC: f_alpha(a_l) = ', 91.385307881801651)
('LC: f_grad(a_l) = ', 284.5898096363901)
('LC: stuff = ', 2.5613082882229746e-05)
('LC: other stuff = ', 91.385333494884534)
LC
('LC: f_alpha(a_0) = ', 91.385316920642239)
('LC: f_alpha(a_l) = ', 91.385316098929493)
('LC: f_grad(a_l) = ', 284.58983000563103)
('LC: stuff = ', 2.5613084544844011e-06)
('LC: other stuff = ', 91.385318660237942)
LC
('LC: f_alpha(a_0) = ', 91.385317002813593)
('LC: f_alpha(a_l) = ', 91.385316920642239)
('LC: f_grad(a_l) = ', 284.58983204255509)
('LC: stuff = ', 2.5613087003066104e-07)
('LC: other stuff = ', 91.385317176773114)
LC
('LC: f_alpha(a_0) = ', 91.385317011030693)
('LC: f_alpha(a_l) = ', 91.385317002813593)
('LC: f_grad(a_l) = ', 284.58983224624762)
('LC: stuff = ', 2.5613087021398435e-08)
('LC: other stuff = ', 91.385317028426684)
LC
('LC: f_alpha(a_0) = ', 91.385317011852365)
('LC: f_alpha(a_l) = ', 91.385317011030693)
('LC: f_grad(a_l) = ', 284.58983226661695)
('LC: stuff = ', 2.5613087023231675e-09)
('LC: other stuff = ', 91.385317013592001)
LC
('LC: f_alpha(a_0) = ', 91.385317011934632)
('LC: f_alpha(a_l) = ', 91.385317011852365)
('LC: f_grad(a_l) = ', 284.58983226865371)
('LC: stuff = ', 2.5615361922342365e-10)
('LC: other stuff = ', 91.385317012108516)
LC
('LC: f_alpha(a_0) = ', 91.385317011942817)
('LC: f_alpha(a_l) = ', 91.385317011934632)
('LC: f_grad(a_l) = ', 284.58983226885749)
('LC: stuff = ', 2.5592612933086851e-11)
('LC: other stuff = ', 91.385317011960225)
LC
('LC: f_alpha(a_0) = ', 91.385317011943641)
('LC: f_alpha(a_l) = ', 91.385317011942817)
('LC: f_grad(a_l) = ', 284.58983226887779)
('LC: stuff = ', 2.5592612933088679e-12)
('LC: other stuff = ', 91.385317011945375)
LC
('LC: f_alpha(a_0) = ', 91.385317011943727)
('LC: f_alpha(a_l) = ', 91.385317011943641)
('LC: f_grad(a_l) = ', 284.58983226887995)
('LC: stuff = ', 2.2748989273856775e-13)
('LC: other stuff = ', 91.385317011943869)
LC
('LC: f_alpha(a_0) = ', 91.385317011943727)
('LC: f_alpha(a_l) = ', 91.385317011943727)
('LC: f_grad(a_l) = ', 284.58983226888017)
('LC: stuff = ', 0.0)
('LC: other stuff = ', 91.385317011943727)
('alpha_k = ', 1.1111111111111112)
('LC: f_alpha(a_0) = ', 103.99956824998692)
('LC: f_alpha(a_l) = ', 1.0)
('LC: f_grad(a_l) = ', 104.99956824998692)
('LC: stuff = ', 94.499611424988231)
('LC: other stuff = ', 95.499611424988231)
LC
('LC: f_alpha(a_0) = ', 150.81930437297166)
('LC: f_alpha(a_l) = ', 103.99956824998692)
('LC: f_grad(a_l) = ', 1712.9887920826059)
('LC: stuff = ', 154.16899128743466)
('LC: other stuff = ', 258.16855953742157)
LC
('LC: f_alpha(a_0) = ', 156.25841377701957)
('LC: f_alpha(a_l) = ', 150.81930437297166)
('LC: f_grad(a_l) = ', 2105.2259786556265)
('LC: stuff = ', 18.947033807900656)
('LC: other stuff = ', 169.76633818087231)
LC
('LC: f_alpha(a_0) = ', 156.81042366519131)
('LC: f_alpha(a_l) = ', 156.25841377701957)
('LC: f_grad(a_l) = ', 2148.03635145407)
('LC: stuff = ', 1.9332327163088794)
('LC: other stuff = ', 158.19164649332845)
LC
('LC: f_alpha(a_0) = ', 156.86570618464123)
('LC: f_alpha(a_l) = ', 156.81042366519131)
('LC: f_grad(a_l) = ', 2152.3547988505256)
('LC: stuff = ', 0.19371193189652597)
('LC: other stuff = ', 157.00413559708784)
LC
('LC: f_alpha(a_0) = ', 156.87123525243507)
('LC: f_alpha(a_l) = ', 156.86570618464123)
('LC: f_grad(a_l) = ', 2152.7870192620444)
('LC: stuff = ', 0.019375083173485328)
('LC: other stuff = ', 156.88508126781471)
LC
('LC: f_alpha(a_0) = ', 156.87178816737352)
('LC: f_alpha(a_l) = ', 156.87123525243507)
('LC: f_grad(a_l) = ', 2152.8302450614869)
('LC: stuff = ', 0.0019375472203959428)
('LC: other stuff = ', 156.87317279965546)
LC
('LC: f_alpha(a_0) = ', 156.87184345894897)
('LC: f_alpha(a_l) = ', 156.87178816737352)
('LC: f_grad(a_l) = ', 2152.8345676790168)
('LC: stuff = ', 0.00019375511120423876)
('LC: other stuff = ', 156.87198192248474)
LC
('LC: f_alpha(a_0) = ', 156.87184898810725)
('LC: f_alpha(a_l) = ', 156.87184345894897)
('LC: f_grad(a_l) = ', 2152.8349999411466)
('LC: stuff = ', 1.9375514881716188e-05)
('LC: other stuff = ', 156.87186283446385)
LC
('LC: f_alpha(a_0) = ', 156.87184954102312)
('LC: f_alpha(a_l) = ', 156.87184898810725)
('LC: f_grad(a_l) = ', 2152.835043167363)
('LC: stuff = ', 1.9375516991643597e-06)
('LC: other stuff = ', 156.87185092565895)
LC
('LC: f_alpha(a_0) = ', 156.87184959631469)
('LC: f_alpha(a_l) = ', 156.87184954102312)
('LC: f_grad(a_l) = ', 2152.8350474899839)
('LC: stuff = ', 1.9375517030547191e-07)
('LC: other stuff = ', 156.87184973477829)
LC
('LC: f_alpha(a_0) = ', 156.87184960184385)
('LC: f_alpha(a_l) = ', 156.87184959631469)
('LC: f_grad(a_l) = ', 2152.8350479222463)
('LC: stuff = ', 1.9375517034437553e-08)
('LC: other stuff = ', 156.87184961569019)
LC
('LC: f_alpha(a_0) = ', 156.87184960239682)
('LC: f_alpha(a_l) = ', 156.87184960184385)
('LC: f_grad(a_l) = ', 2152.8350479654723)
('LC: stuff = ', 1.9377237926294284e-09)
('LC: other stuff = ', 156.87184960378158)
LC
('LC: f_alpha(a_0) = ', 156.87184960245207)
('LC: f_alpha(a_l) = ', 156.87184960239682)
('LC: f_grad(a_l) = ', 2152.8350479697961)
('LC: stuff = ', 1.9360029011656175e-10)
('LC: other stuff = ', 156.87184960259043)
LC
('LC: f_alpha(a_0) = ', 156.87184960245762)
('LC: f_alpha(a_l) = ', 156.87184960245207)
('LC: f_grad(a_l) = ', 2152.8350479702253)
('LC: stuff = ', 1.9360029011660034e-11)
('LC: other stuff = ', 156.87184960247143)
LC
('LC: f_alpha(a_0) = ', 156.8718496024581)
('LC: f_alpha(a_l) = ', 156.87184960245762)
('LC: f_grad(a_l) = ', 2152.8350479702704)
('LC: stuff = ', 1.7208914677031502e-12)
('LC: other stuff = ', 156.87184960245935)
LC
('LC: f_alpha(a_0) = ', 156.8718496024581)
('LC: f_alpha(a_l) = ', 156.8718496024581)
('LC: f_grad(a_l) = ', 2152.835047970274)
('LC: stuff = ', 0.0)
('LC: other stuff = ', 156.8718496024581)
('alpha_k = ', 1.1111111111111112)
('LC: f_alpha(a_0) = ', 609.66168408282851)
('LC: f_alpha(a_l) = ', 152.4260478012913)
('LC: f_grad(a_l) = ', 762.08773188411988)
('LC: stuff = ', 685.87895869570787)
('LC: other stuff = ', 838.30500649699911)
LC
('LC: f_alpha(a_0) = ', 672.15046043566076)
('LC: f_alpha(a_l) = ', 609.66168408282851)
('LC: f_grad(a_l) = ', 1981.3811471977315)
('LC: stuff = ', 178.324303247796)
('LC: other stuff = ', 787.98598733062454)
LC
('LC: f_alpha(a_0) = ', 678.56699026141882)
('LC: f_alpha(a_l) = ', 672.15046043566076)
('LC: f_grad(a_l) = ', 2136.840931267122)
('LC: stuff = ', 19.231568381404113)
('LC: other stuff = ', 691.38202881706491)
LC
('LC: f_alpha(a_0) = ', 679.21031976596259)
('LC: f_alpha(a_l) = ', 678.56699026141882)
('LC: f_grad(a_l) = ', 2152.722214225897)
('LC: stuff = ', 1.937449992803524)
('LC: other stuff = ', 680.50444025422235)
LC
('LC: f_alpha(a_0) = ', 679.27466948163669)
('LC: f_alpha(a_l) = ', 679.21031976596259)
('LC: f_grad(a_l) = ', 2154.3136955674195)
('LC: stuff = ', 0.1938882326010464)
('LC: other stuff = ', 679.40420799856361)
LC
('LC: f_alpha(a_0) = ', 679.28110462085613)
('LC: f_alpha(a_l) = ', 679.27466948163669)
('LC: f_grad(a_l) = ', 2154.4728772320286)
('LC: stuff = ', 0.019390255895215286)
('LC: other stuff = ', 679.29405973753194)
LC
('LC: f_alpha(a_0) = ', 679.28174813645467)
('LC: f_alpha(a_l) = ', 679.28110462085613)
('LC: f_grad(a_l) = ', 2154.4887957337942)
('LC: stuff = ', 0.0019390399160008965)
('LC: other stuff = ', 679.28304366077214)
LC
('LC: f_alpha(a_0) = ', 679.28181248803173)
('LC: f_alpha(a_l) = ', 679.28174813645467)
('LC: f_grad(a_l) = ', 2154.4903875873233)
('LC: stuff = ', 0.00019390413499607335)
('LC: other stuff = ', 679.28194204058968)
LC
('LC: f_alpha(a_0) = ', 679.28181892318935)
('LC: f_alpha(a_l) = ', 679.28181248803173)
('LC: f_grad(a_l) = ', 2154.4905467727103)
('LC: stuff = ', 1.939041480310971e-05)
('LC: other stuff = ', 679.2818318784465)
LC
('LC: f_alpha(a_0) = ', 679.28181956670505)
('LC: f_alpha(a_l) = ', 679.28181892318935)
('LC: f_grad(a_l) = ', 2154.4905626912496)
('LC: stuff = ', 1.939041666859138e-06)
('LC: other stuff = ', 679.28182086223103)
LC
('LC: f_alpha(a_0) = ', 679.28181963105669)
('LC: f_alpha(a_l) = ', 679.28181956670505)
('LC: f_grad(a_l) = ', 2154.4905642831027)
('LC: stuff = ', 1.9390416682918062e-07)
('LC: other stuff = ', 679.28181976060921)
LC
('LC: f_alpha(a_0) = ', 679.28181963749182)
('LC: f_alpha(a_l) = ', 679.28181963105669)
('LC: f_grad(a_l) = ', 2154.4905644422884)
('LC: stuff = ', 1.9390416684350735e-08)
('LC: other stuff = ', 679.28181965044712)
LC
('LC: f_alpha(a_0) = ', 679.28181963813563)
('LC: f_alpha(a_l) = ', 679.28181963749182)
('LC: f_grad(a_l) = ', 2154.4905644582072)
('LC: stuff = ', 1.939213889931632e-09)
('LC: other stuff = ', 679.28181963943109)
LC
('LC: f_alpha(a_0) = ', 679.28181963819975)
('LC: f_alpha(a_l) = ', 679.28181963813563)
('LC: f_grad(a_l) = ', 2154.4905644597993)
('LC: stuff = ', 1.9374916751107447e-10)
('LC: other stuff = ', 679.28181963832935)
LC
('LC: f_alpha(a_0) = ', 679.28181963820623)
('LC: f_alpha(a_l) = ', 679.28181963819975)
('LC: f_grad(a_l) = ', 2154.4905644599576)
('LC: stuff = ', 1.9374916751108868e-11)
('LC: other stuff = ', 679.28181963821908)
LC
('LC: f_alpha(a_0) = ', 679.28181963820691)
('LC: f_alpha(a_l) = ', 679.28181963820623)
('LC: f_grad(a_l) = ', 2154.4905644599735)
('LC: stuff = ', 1.7222148223208011e-12)
('LC: other stuff = ', 679.28181963820793)
LC
('LC: f_alpha(a_0) = ', 679.28181963820691)
('LC: f_alpha(a_l) = ', 679.28181963820691)
('LC: f_grad(a_l) = ', 2154.4905644599748)
('LC: stuff = ', 0.0)
('LC: other stuff = ', 679.28181963820691)
('alpha_k = ', 1.1111111111111112)
